@using LegalCaseManagementSystem_FrontEnd.Models
@using LegalCaseManagementSystem_FrontEnd.Services
@inject DashboardState DashboardState

<div class="hearings-card">
    <div class="card-header">
        <h3>Upcoming Hearings</h3>
        <button class="btn btn-primary btn-sm" @onclick="OnShowAllHearings">
            View All
        </button>
    </div>
    <div class="hearings-list">
        @if (DashboardState.UpcomingHearings.Any())
        {
            @foreach (var hearing in DashboardState.UpcomingHearings.OrderBy(h => h.HearingDate).Take(3))
            {
                <div class="hearing-item">
                    <div class="hearing-date">
                        <span class="day">@hearing.HearingDate.Day</span>
                        <span class="month">@hearing.HearingDate.ToString("MMM")</span>
                    </div>
                    <div class="hearing-info">
                        <h4>@(hearing.Case?.Title ?? "N/A")</h4>
                        <p>
                            <i class="fas fa-clock"></i>
                            @hearing.HearingDate.ToString("h:mm tt")
                        </p>
                        @if (!string.IsNullOrEmpty(hearing.Venue))
                        {
                            <p>
                                <i class="fas fa-map-marker-alt"></i>
                                @hearing.Venue
                            </p>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="no-hearings">
                <i class="fas fa-calendar-times"></i>
                <p>No upcoming hearings</p>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public EventCallback OnShowAllHearings { get; set; }
}