@using LegalCaseManagementSystem_FrontEnd.Models
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation

<div class="dashboard-header">
    <div class="header-container">
        <div class="header-brand">
            <img src="/images/law.png" alt="Client Portal Logo" class="brand-logo" />
            <div class="brand-text">
                <h1>Client Portal <span class="pro-badge">PRO</span></h1>
                <p class="brand-tagline">Legal Support • Client Services</p>
            </div>
        </div>

        <div class="header-left">
            <h1>@Title</h1>
            <p class="text-muted">Welcome back, @user?.Username</p>
        </div>

        <div class="header-actions">
            <div class="user-dropdown">
                <div class="user-avatar-container">
                    <img src="https://ui-avatars.com/api/?name=@(user?.Username?.FirstOrDefault() ?? 'U')&background=4e73df&color=fff"
                         class="user-avatar" />
                    <span class="user-status"></span>
                </div>
                <div class="dropdown-menu">
                    <a href="/update-password" class="dropdown-item">
                        <i class="fas fa-cog"></i> Change Password
                    </a>
                    <div class="dropdown-divider"></div>
                    <a href="/login" class="dropdown-item">
                        <i class="fas fa-sign-out-alt"></i> Logout
                    </a>
                </div>
            </div>
        </div>

        <button class="mobile-menu-toggle" @onclick="ToggleMobileMenu">
            <i class="fas fa-bars"></i>
        </button>
    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; } = "Client Dashboard";

    private User? user;
    private bool isMobileMenuOpen;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        user = new User { Username = authState.User.Identity?.Name ?? "User" };
    }

    private void ToggleMobileMenu()
    {
        isMobileMenuOpen = !isMobileMenuOpen;
    }
}